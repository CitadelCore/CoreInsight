<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DatabaseCorruptError" xml:space="preserve">
    <value>The database is critically corrupt and could not be loaded. Error: </value>
  </data>
  <data name="DatabaseFailedSchema" xml:space="preserve">
    <value>Failed to generate a new database: Couldn't open the database schema!</value>
  </data>
  <data name="DatabaseFailedTemplate" xml:space="preserve">
    <value>Failed to generate a new database: Couldn't open the template file!</value>
  </data>
  <data name="DatabaseLoadWarning" xml:space="preserve">
    <value>A warning occured while loading the database: </value>
  </data>
  <data name="DatabaseNotInitialized" xml:space="preserve">
    <value>The database hasn't been initialized or isn't valid.</value>
  </data>
  <data name="DRXCorrupted" xml:space="preserve">
    <value>You entered an incorrect password or used an invalid certificate, or the file is corrupted. Error: </value>
  </data>
  <data name="DRXDecryptionError" xml:space="preserve">
    <value>Failed to decrypt the DRX. Decryption error.</value>
  </data>
  <data name="DRXEditor" xml:space="preserve">
    <value>DRX Editor</value>
    <comment>Name of all of the DRX editor dialogs.</comment>
  </data>
  <data name="DRXFileLoadException" xml:space="preserve">
    <value>Couldn't open the specified DRX: </value>
  </data>
  <data name="DRXFilenameNull" xml:space="preserve">
    <value>DRXFilename is null.</value>
  </data>
  <data name="DRXInaccessible" xml:space="preserve">
    <value>Couldn't load the specified DRX. The file may be corrupt or inaccessible.</value>
  </data>
  <data name="DRXInspirationalQuote" xml:space="preserve">
    <value>Remember, Exertus is watching...</value>
  </data>
  <data name="DRXLoadCorrupt" xml:space="preserve">
    <value>The DRX is critically corrupt and could not be loaded. Error: </value>
  </data>
  <data name="DRXLoadError" xml:space="preserve">
    <value>Couldn't load the DRX: </value>
  </data>
  <data name="DRXLoadWarning" xml:space="preserve">
    <value>A warning occured while loading the DRX: </value>
  </data>
  <data name="DRXNotEnoughParameters" xml:space="preserve">
    <value>Not enough parameters set.</value>
  </data>
  <data name="DRXNotInDatabase" xml:space="preserve">
    <value>Couldn't load the specified DRX. The file does not exist in the local database.</value>
  </data>
  <data name="DRXParameterError" xml:space="preserve">
    <value>Parameter error while trying to open the DRX: </value>
  </data>
  <data name="DRXSaveErrors" xml:space="preserve">
    <value>Errors occured while attempting to save the DRX.</value>
  </data>
  <data name="DRXSaveErrorsException" xml:space="preserve">
    <value>Errors occured while attempting to save the DRX file: </value>
  </data>
  <data name="DRXSchemaLoadError" xml:space="preserve">
    <value>Couldn't load the DRX Schema!</value>
  </data>
  <data name="DRXSeriesZero" xml:space="preserve">
    <value>The DRX Series ID cannot be 0.</value>
  </data>
  <data name="DRXCertNotSelected" xml:space="preserve">
    <value>You didn't select a certificate, or the certificate couldn't be loaded due to an internal Windows error.</value>
  </data>
  <data name="DRXCertInvalid" xml:space="preserve">
    <value>The certificate selected is invalid. This might be because no private key is available, or because you don't have permission to use the certificate. Please try again with a different certificate.</value>
  </data>
  <data name="DRXCertValidity" xml:space="preserve">
    <value>DRX Editor was unable to check the revocation status or validity of the selected certificate because a connection to the TOWER internal certification authority servers could not be established, or the certificate is expired. Do you want to continue?</value>
  </data>
  <data name="DRXCannotPrint" xml:space="preserve">
    <value>Due to security reasons, DRXes with a security level of THL (Thaumiel) or higher cannot be printed.</value>
  </data>
  <data name="DRXShortcutSuccess" xml:space="preserve">
    <value>A shortcut to the DRX has been placed on your desktop.</value>
  </data>
  <data name="DRXNoMatchCert" xml:space="preserve">
    <value>The certificate serial saved in the document does not match any certificate stored on your computer. Please manually select a certificate.</value>
  </data>
  <data name="DRXCertificateEncryptionRequired" xml:space="preserve">
    <value>You're attempting to create or update a DRX with a Security Level of THL (Thaumiel) or higher. Security policy requires certificate encryption for additional security. Click OK to change encryption type.</value>
  </data>
  <data name="DRXEncryptionPublicDisable" xml:space="preserve">
    <value>You're attempting to create or update a DRX with a Security Level of PLC (Public). Public DRXes are treated as insecure and cannot have encryption enabled. Click OK to disable encryption.</value>
  </data>
  <data name="DRXEncryptionRequired" xml:space="preserve">
    <value>You're attempting to create or update a DRX with a Security Level of TSCT (Top Secret) or higher. Security policy requires encryption to be enforced. Click OK to enable encryption.</value>
  </data>
  <data name="DRXSecurityReccomendation" xml:space="preserve">
    <value>You're attempting to create or update a DRX with a Security Level of SCT (Secret) or higher. It's strongly reccomended you enable encryption on this DRX, for security reasons.</value>
  </data>
  <data name="DRXSmartCardRequired" xml:space="preserve">
    <value>You're attempting to create or update a DRX with a Security Level of SV (StormVault) or higher. Security policy requires smart card encryption for maximum security. Click OK to change encryption type.</value>
  </data>
  <data name="DRXNoFileOpen" xml:space="preserve">
    <value>No file is currently open.</value>
  </data>
  <data name="DRXBackupComplete" xml:space="preserve">
    <value>The database backup has been completed.</value>
  </data>
  <data name="DRXRestoreComplete" xml:space="preserve">
    <value>The database restore has been completed.</value>
  </data>
  <data name="CommitWarning" xml:space="preserve">
    <value>You're about to COMMIT this DRX to the database. This action is reversable, but once another DRX is created after this one this change will become permanent and this DRX will be assigned a permanent ID. Once a DRX is assigned an ID, that ID is permanent and imprinted in the individual document. A permanent DRX ID should NEVER be changed. If you want to commit this document, click OK, otherwise, click Cancel now.</value>
  </data>
</root>