//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CoreDRXLibrary {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CoreDRXLibrary.strings", typeof(strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;re about to COMMIT this DRX to the database. This action is reversable, but once another DRX is created after this one this change will become permanent and this DRX will be assigned a permanent ID. Once a DRX is assigned an ID, that ID is permanent and imprinted in the individual document. A permanent DRX ID should NEVER be changed. If you want to commit this document, click OK, otherwise, click Cancel now..
        /// </summary>
        internal static string CommitWarning {
            get {
                return ResourceManager.GetString("CommitWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database is critically corrupt and could not be loaded. Error: .
        /// </summary>
        internal static string DatabaseCorruptError {
            get {
                return ResourceManager.GetString("DatabaseCorruptError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to generate a new database: Couldn&apos;t open the database schema!.
        /// </summary>
        internal static string DatabaseFailedSchema {
            get {
                return ResourceManager.GetString("DatabaseFailedSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to generate a new database: Couldn&apos;t open the template file!.
        /// </summary>
        internal static string DatabaseFailedTemplate {
            get {
                return ResourceManager.GetString("DatabaseFailedTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A warning occured while loading the database: .
        /// </summary>
        internal static string DatabaseLoadWarning {
            get {
                return ResourceManager.GetString("DatabaseLoadWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database hasn&apos;t been initialized or isn&apos;t valid..
        /// </summary>
        internal static string DatabaseNotInitialized {
            get {
                return ResourceManager.GetString("DatabaseNotInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database backup has been completed..
        /// </summary>
        internal static string DRXBackupComplete {
            get {
                return ResourceManager.GetString("DRXBackupComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Due to security reasons, DRXes with a security level of THL (Thaumiel) or higher cannot be printed..
        /// </summary>
        internal static string DRXCannotPrint {
            get {
                return ResourceManager.GetString("DRXCannotPrint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;re attempting to create or update a DRX with a Security Level of THL (Thaumiel) or higher. Security policy requires certificate encryption for additional security. Click OK to change encryption type..
        /// </summary>
        internal static string DRXCertificateEncryptionRequired {
            get {
                return ResourceManager.GetString("DRXCertificateEncryptionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate selected is invalid. This might be because no private key is available, or because you don&apos;t have permission to use the certificate. Please try again with a different certificate..
        /// </summary>
        internal static string DRXCertInvalid {
            get {
                return ResourceManager.GetString("DRXCertInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You didn&apos;t select a certificate, or the certificate couldn&apos;t be loaded due to an internal Windows error..
        /// </summary>
        internal static string DRXCertNotSelected {
            get {
                return ResourceManager.GetString("DRXCertNotSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DRX Editor was unable to check the revocation status or validity of the selected certificate because a connection to the TOWER internal certification authority servers could not be established, or the certificate is expired. Do you want to continue?.
        /// </summary>
        internal static string DRXCertValidity {
            get {
                return ResourceManager.GetString("DRXCertValidity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You entered an incorrect password or used an invalid certificate, or the file is corrupted. Error: .
        /// </summary>
        internal static string DRXCorrupted {
            get {
                return ResourceManager.GetString("DRXCorrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to decrypt the DRX. Decryption error..
        /// </summary>
        internal static string DRXDecryptionError {
            get {
                return ResourceManager.GetString("DRXDecryptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DRX Editor.
        /// </summary>
        internal static string DRXEditor {
            get {
                return ResourceManager.GetString("DRXEditor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;re attempting to create or update a DRX with a Security Level of PLC (Public). Public DRXes are treated as insecure and cannot have encryption enabled. Click OK to disable encryption..
        /// </summary>
        internal static string DRXEncryptionPublicDisable {
            get {
                return ResourceManager.GetString("DRXEncryptionPublicDisable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;re attempting to create or update a DRX with a Security Level of TSCT (Top Secret) or higher. Security policy requires encryption to be enforced. Click OK to enable encryption..
        /// </summary>
        internal static string DRXEncryptionRequired {
            get {
                return ResourceManager.GetString("DRXEncryptionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t open the specified DRX: .
        /// </summary>
        internal static string DRXFileLoadException {
            get {
                return ResourceManager.GetString("DRXFileLoadException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DRXFilename is null..
        /// </summary>
        internal static string DRXFilenameNull {
            get {
                return ResourceManager.GetString("DRXFilenameNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t load the specified DRX. The file may be corrupt or inaccessible..
        /// </summary>
        internal static string DRXInaccessible {
            get {
                return ResourceManager.GetString("DRXInaccessible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remember, Exertus is watching....
        /// </summary>
        internal static string DRXInspirationalQuote {
            get {
                return ResourceManager.GetString("DRXInspirationalQuote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DRX is critically corrupt and could not be loaded. Error: .
        /// </summary>
        internal static string DRXLoadCorrupt {
            get {
                return ResourceManager.GetString("DRXLoadCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t load the DRX: .
        /// </summary>
        internal static string DRXLoadError {
            get {
                return ResourceManager.GetString("DRXLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A warning occured while loading the DRX: .
        /// </summary>
        internal static string DRXLoadWarning {
            get {
                return ResourceManager.GetString("DRXLoadWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No file is currently open..
        /// </summary>
        internal static string DRXNoFileOpen {
            get {
                return ResourceManager.GetString("DRXNoFileOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate serial saved in the document does not match any certificate stored on your computer. Please manually select a certificate..
        /// </summary>
        internal static string DRXNoMatchCert {
            get {
                return ResourceManager.GetString("DRXNoMatchCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enough parameters set..
        /// </summary>
        internal static string DRXNotEnoughParameters {
            get {
                return ResourceManager.GetString("DRXNotEnoughParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t load the specified DRX. The file does not exist in the local database..
        /// </summary>
        internal static string DRXNotInDatabase {
            get {
                return ResourceManager.GetString("DRXNotInDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter error while trying to open the DRX: .
        /// </summary>
        internal static string DRXParameterError {
            get {
                return ResourceManager.GetString("DRXParameterError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database restore has been completed..
        /// </summary>
        internal static string DRXRestoreComplete {
            get {
                return ResourceManager.GetString("DRXRestoreComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Errors occured while attempting to save the DRX..
        /// </summary>
        internal static string DRXSaveErrors {
            get {
                return ResourceManager.GetString("DRXSaveErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Errors occured while attempting to save the DRX file: .
        /// </summary>
        internal static string DRXSaveErrorsException {
            get {
                return ResourceManager.GetString("DRXSaveErrorsException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t load the DRX Schema!.
        /// </summary>
        internal static string DRXSchemaLoadError {
            get {
                return ResourceManager.GetString("DRXSchemaLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;re attempting to create or update a DRX with a Security Level of SCT (Secret) or higher. It&apos;s strongly reccomended you enable encryption on this DRX, for security reasons..
        /// </summary>
        internal static string DRXSecurityReccomendation {
            get {
                return ResourceManager.GetString("DRXSecurityReccomendation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DRX Series ID cannot be 0..
        /// </summary>
        internal static string DRXSeriesZero {
            get {
                return ResourceManager.GetString("DRXSeriesZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A shortcut to the DRX has been placed on your desktop..
        /// </summary>
        internal static string DRXShortcutSuccess {
            get {
                return ResourceManager.GetString("DRXShortcutSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;re attempting to create or update a DRX with a Security Level of SV (StormVault) or higher. Security policy requires smart card encryption for maximum security. Click OK to change encryption type..
        /// </summary>
        internal static string DRXSmartCardRequired {
            get {
                return ResourceManager.GetString("DRXSmartCardRequired", resourceCulture);
            }
        }
    }
}
